{"is_source_file": true, "format": "TypeScript", "description": "This file defines a Vue composable for managing a to-do list application's state, including types for to-do lists and tasks, reactive state variables, and functions for CRUD operations interfacing with a backend API.", "external_files": ["vue", "#app", "./utils/nanoid", "./useToaster"], "external_methods": ["$fetch", "useRuntimeConfig", "useToaster"], "published": ["useTodoStore"], "classes": [], "methods": [{"name": "export function useTodoStore() { useTodoStore", "description": "Main function that provides reactive state and CRUD actions for to-do lists and tasks.", "scope": "", "scopeKind": ""}, {"name": "ensureLoaded", "description": "Fetches initial to-do list data from the backend if not already loaded."}, {"name": "setActiveList", "description": "Sets the currently active to-do list by ID."}, {"name": "createList", "description": "Creates a new to-do list with the specified name."}, {"name": "renameList", "description": "Renames an existing to-do list identified by ID."}, {"name": "deleteList", "description": "Deletes a to-do list by ID."}, {"name": "createTask", "description": "Creates a new task within a specified list."}, {"name": "updateTask", "description": "Updates an existing task within a list."}, {"name": "deleteTask", "description": "Removes a task from a list."}], "calls": ["$fetch", "useRuntimeConfig", "useToaster.toastError"], "search-terms": ["useTodoStore", "Vue composable", "todo list state management", "TypeScript Todo types", "reactive tasks", "CRUD operations", "API integration", "to-do list app"], "state": 2, "file_id": 9, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "Task", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^export type Task = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "TodoList", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^export type TodoList = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "activeListId", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^const activeListId = ref<string | null>(null)$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "arr", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const arr = tasksByList.value[listId] || []$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const body = { name }$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const idx = arr.findIndex(t => t.id === taskId)$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const idx = lists.value.findIndex(l => l.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const list = await $fetch<TodoList>(`${apiBase}\\/lists`, { method: 'POST', body })$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "listId", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const arr = tasksByList.value[listId] || []$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "lists", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^const lists = ref<TodoList[]>([])$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "loaded", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^const loaded = ref(false)$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "public", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^  const { public: { apiBase } } = useRuntimeConfig()$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^      const res = await $fetch<{lists: TodoList[], tasksByList: Record<string, Task[]>}>(`${apiB/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const task = await $fetch<Task>(`${apiBase}\\/lists\\/${listId}\\/tasks\\/${taskId}`, { method: /", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const task = await $fetch<Task>(`${apiBase}\\/lists\\/${listId}\\/tasks`, { method: 'POST', bod/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "tasksByList", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^const tasksByList = ref<Record<string, Task[]>>({})$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "toastError", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^  const { toastError } = useToaster()$/", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^    const updated = await $fetch<TodoList>(`${apiBase}\\/lists\\/${id}`, { method: 'PATCH', body: /", "language": "TypeScript", "kind": "constant", "scope": "useTodoStore", "scopeKind": "function"}, {"_type": "tag", "name": "useTodoStore", "path": "/home/kavia/workspace/code-generation/simple-to-do-organizer-16812-16824/to_do_list_web_frontend/composables/useTodoStore.ts", "pattern": "/^export function useTodoStore() {$/", "language": "TypeScript", "kind": "function"}], "hash": "eb1f65b30144d35fe9e591e3c229c8fd", "format-version": 4, "code-base-name": "to_do_list_web_frontend", "filename": "to_do_list_web_frontend/composables/useTodoStore.ts", "revision_history": [{"20": ""}]}